import os
import logging
import boto3
from botocore.exceptions import NoCredentialsError
from kaggle.api.kaggle_api_extended import KaggleApi

# ---------------- CONFIG ----------------
AWS_ACCESS_KEY = os.getenv("AWS_ACCESS_KEY_ID", "AKIAXQTAFYM2MXFZS672")
AWS_SECRET_KEY = os.getenv("AWS_SECRET_ACCESS_KEY", "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")
AWS_BUCKET = "churn-bronze-layer-group16"
S3_PREFIX = "raw_data/Kaggle/"

# Use the exact dataset slug
KAGGLE_DATASET_SLUG = "datajameson/telecom-churn-dataset"
LOCAL_KAGGLE_PATH = "raw_data/Kaggle/"

# Read Kaggle credentials from environment (no defaults with secrets)
KAGGLE_USERNAME = os.getenv("KAGGLE_USERNAME", "priydarshanparui")
KAGGLE_KEY = os.getenv("KAGGLE_KEY", "23b81e16b8345189b15253c3b4aad106")

# ---------------- LOGGING ----------------
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

# ---------------- FUNCTIONS ----------------
def ensure_local_dir(path):
    """Ensure the local directory exists."""
    if not os.path.exists(path):
        os.makedirs(path, exist_ok=True)
        logging.info(f"Created local directory: {path}")

def ensure_kaggle_credentials():
    """Ensure kaggle credentials exist for KaggleApi (writes ~/.kaggle/kaggle.json)."""
    if not KAGGLE_USERNAME or not KAGGLE_KEY:
        logging.error("KAGGLE_USERNAME or KAGGLE_KEY not set in environment.")
        raise ValueError("Kaggle credentials missing. Set KAGGLE_USERNAME and KAGGLE_KEY env vars.")
    kaggle_dir = os.path.expanduser("~/.kaggle")
    kaggle_file = os.path.join(kaggle_dir, "kaggle.json")
    if not os.path.exists(kaggle_dir):
        os.makedirs(kaggle_dir, exist_ok=True)
    # Write credentials in the format expected by the Kaggle CLI/API
    cred_content = {
        "username": KAGGLE_USERNAME,
        "key": KAGGLE_KEY
    }
    try:
        import json
        with open(kaggle_file, "w", encoding="utf-8") as f:
            json.dump(cred_content, f)
        try:
            os.chmod(kaggle_file, 0o600)
        except Exception:
            # chmod may not be effective on some Windows setups; continue nonetheless
            logging.debug("Could not set file permissions on kaggle.json (platform may not support chmod).")
        logging.info(f"Wrote kaggle credentials to: {kaggle_file}")
    except Exception as e:
        logging.error(f"Failed to write kaggle credentials: {e}")
        raise

def download_from_kaggle(slug, path):
    """Download dataset from Kaggle API."""
    logging.info(f"Downloading Kaggle dataset: {slug}")
    try:
        ensure_kaggle_credentials()
    except Exception as e:
        logging.error(f"Kaggle credential setup failed: {e}")
        raise
    try:
        api = KaggleApi()
        api.authenticate()
        api.dataset_download_files(slug, path=path, unzip=True)
        logging.info(f"Dataset downloaded and extracted to: {path}")
    except Exception as e:
        logging.error(f"Kaggle download/authentication failed: {e}")
        raise

def upload_to_s3(local_dir, bucket, prefix):
    """Upload all files from local_dir to S3 path."""
    s3 = boto3.client(
        "s3",
        aws_access_key_id=AWS_ACCESS_KEY,
        aws_secret_access_key=AWS_SECRET_KEY
    )
    for root, _, files in os.walk(local_dir):
        for fname in files:
            local_path = os.path.join(root, fname)
            s3_key = os.path.join(prefix, fname)
            try:
                s3.upload_file(local_path, bucket, s3_key)
                logging.info(f"Uploaded {local_path} → s3://{bucket}/{s3_key}")
            except FileNotFoundError:
                logging.error(f"File not found: {local_path}")
            except NoCredentialsError:
                logging.error("AWS credentials not available!")

# ---------------- MAIN ----------------
if __name__ == "__main__":
    ensure_local_dir(LOCAL_KAGGLE_PATH)
    download_from_kaggle(KAGGLE_DATASET_SLUG, LOCAL_KAGGLE_PATH)
    upload_to_s3(LOCAL_KAGGLE_PATH, AWS_BUCKET, S3_PREFIX)
