import os
import base64
from github import Github
import pkg_resources

# =========================
# CONFIG
# =========================
# Personal Access Token from GitHub (Settings → Developer settings → PAT → Tokens)
ACCESS_TOKEN = "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"   # 🔴 Replace with your token
REPO_NAME = "priydarshan8850/DMML_DVC_REPO"  # user/repo
BRANCH = "main"

# Local project path
PROJECT_PATH = r"C:\Users\priyd\Downloads\DMML\Data Ingestion"   # 🔴 Change to your folder path


# =========================
# GITHUB LOGIN
# =========================
g = Github(ACCESS_TOKEN)
repo = g.get_repo(REPO_NAME)


# =========================
# CREATE requirements.txt
# =========================
requirements_path = os.path.join(PROJECT_PATH, "requirements.txt")
installed_packages = pkg_resources.working_set
with open(requirements_path, "w") as f:
    for pkg in installed_packages:
        f.write(f"{pkg.project_name}=={pkg.version}\n")

print("✅ requirements.txt generated.")


# =========================
# UPLOAD FUNCTION
# =========================
def upload_file(local_path, github_path):
    """Upload a file to GitHub repo (create or update)."""
    with open(local_path, "rb") as f:
        content = f.read()

    try:
        contents = repo.get_contents(github_path, ref=BRANCH)
        repo.update_file(
            path=contents.path,
            message=f"Update {github_path}",
            content=base64.b64encode(content).decode(),
            sha=contents.sha,
            branch=BRANCH,
        )
        print(f"🔄 Updated: {github_path}")
    except Exception:
        repo.create_file(
            path=github_path,
            message=f"Add {github_path}",
            content=base64.b64encode(content).decode(),
            branch=BRANCH,
        )
        print(f"✅ Uploaded: {github_path}")


# =========================
# WALK THROUGH PROJECT
# =========================
for root, _, files in os.walk(PROJECT_PATH):
    for file in files:
        local_path = os.path.join(root, file)
        github_path = os.path.relpath(local_path, PROJECT_PATH).replace("\\", "/")
        upload_file(local_path, github_path)

print("🎉 All files uploaded successfully to GitHub!")
